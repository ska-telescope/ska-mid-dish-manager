{{- /*
tango-util.operator.tpl
Parameters:
- deviceserver (the deviceserver entire yaml tag)
- image (to be used for the deviceserver)
- local (the local chart)
- instance (of the device server)
*/}}
{{ define "ska-tango-util.operator-svc.tpl" }}
{{- $labels := coalesce .local.Values.global.labels .local.Values.labels "label:none" }}
{{- $annotations := coalesce .local.Values.global.annotations .local.Values.annotations }}
{{- $default_tango_host := printf "%s-%s:10000" "databaseds-tango-base-" .local.Release.Name }}
{{- $tango_host := tpl (coalesce .local.Values.global.tango_host .local.Values.tango_host $default_tango_host | toString) .local }}
{{- $databaseds_name := (split ":" $tango_host)._0 }} 
{{- $cluster_domain := coalesce .local.Values.global.cluster_domain "cluster.local" }}
{{- $chart := .local }}
{{- $deviceserver := .deviceserver }}
{{- $deviceserver_name := tpl (coalesce .name .deviceserver.name | toString) .local }}
{{- $tango_server_ip := coalesce .deviceserver.server_ip .local.Values.device_server_ip "0.0.0.0" }}
{{- $legacy_compatibility := or .deviceserver.legacy_compatibility .local.Values.legacy_compatibility }}
{{- range $instance := $deviceserver.server.instances }}
{{- $safe_instance := $instance.name | toString | replace "_" "-" }}
{{- if has $safe_instance $deviceserver.instances }}
---
apiVersion: tango.tango-controls.org/v1
kind: DeviceServer
metadata:
  name: {{$deviceserver_name | toString }}-{{ $safe_instance }}
  namespace: {{ $chart.Release.Namespace }}
  labels:
{{ toYaml $labels | indent 4 }}
    component: {{tpl ($deviceserver_name | toString) $chart }}-{{ $safe_instance }}
    function: {{ $deviceserver.function }}
    domain: {{ $deviceserver.domain }}
    subsystem: {{ $chart.Values.subsystem }}
{{- if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
{{- end }}
spec:
  legacycompatibility: {{ if ne $legacy_compatibility true}}false{{ else }}true{{ end }}
  clusterDomain: {{ $cluster_domain }}
{{- if or ($chart.Values.global.minikube) ($chart.Values.global.exposeAllDS) ($deviceserver.exposeDS) }}
  enableLoadBalancer: true
{{- end }}
  databaseds: {{ $databaseds_name }}
  image: "{{ tpl ($deviceserver.image.registry | toString) $chart }}/{{ tpl ($deviceserver.image.image | toString) $chart }}:{{ tpl ($deviceserver.image.tag | toString) $chart }}"
  imagePullPolicy: {{ tpl ($deviceserver.image.pullPolicy | toString) $chart }}
  args: "{{ $safe_instance | toString }}"
  {{- if hasKey $deviceserver "volume" }}
  volumes:
  - name: volume-data
    persistentVolumeClaim:
      claimName: {{ $deviceserver.volume.existingClaimName | default (printf "%s-pvc-%s" $deviceserver.volume.name $chart.Release.Name) }}
  {{- end }}
  {{- with $deviceserver.volume }}
  volumeMounts:
  - name: volume-data
    mountPath: {{ .mountPath }}
    readOnly: {{ (hasKey . "readOnly" | ternary .readOnly true) }}{{/* https://github.com/helm/helm/issues/3308 */}}
  {{- end }}
  dsname: "{{ $deviceserver.server.name }}"
  config: |
    {
      "servers": {
        "{{ $deviceserver.server.name }}" : {
          {{- range $index_instance,$instance := $deviceserver.server.instances }}
          {{- if has $instance.name $deviceserver.instances }}
          {{- if hasKey $deviceserver "tmp_start_instance" }},{{end}}
          {{- $_ := set $deviceserver "tmp_start_instance" "1" }}
          "{{ $instance.name }}": {
            {{- range $index_class, $class := $instance.classes }}
            {{- if $index_class}},{{end}}
            "{{ $class.name }}": {
              {{- range $index_device, $device := $class.devices }}
              {{- if $index_device}},{{end}}
              "{{ $device.name }}": {
                {{- if $device.properties }}
                "properties": {
                  {{- range $index_property, $property := $device.properties }}
                  {{- if $index_property}},{{end}}
                  "{{ $property.name }}": [
                    {{- range $index_value, $value := $property.values }}
                    {{- if $index_value}},{{end}}
                    "{{ tpl $value $chart }}"
                    {{- end }}
                    ]
                  {{- end }}
                }{{ if $device.attribute_properties }},{{ end }}
                {{- end }}
                {{- if $device.attribute_properties }}
                "attribute_properties": {
                  {{- range $index_attr_prop, $attr_prop := $device.attribute_properties }}
                  {{- if $index_attr_prop}},{{end}}
                  "{{ $attr_prop.attribute }}": {
                    {{- range $index_prop, $prop := $attr_prop.properties }}
                    {{- if $index_prop}},{{end}}
                    "{{ $prop.name }}": [
                    {{- range $index_value, $value := $prop.values }}
                    {{- if $index_value}},{{end}}
                    "{{ tpl $value $chart }}"
                    {{- end }}
                    ]
                    {{- end }}
                  }
                {{- end }}
                }
                {{- end }}
              }
              {{- end }}
            }
            {{- end }}
          }
          {{- end }}
          {{- end }}
        }
      }{{ if $deviceserver.class_properties }},
      "classes": {
        {{- range $index_class_prop_group, $class_prop_group := $deviceserver.class_properties }}
        {{- if $index_class_prop_group}},{{end}}
          "{{ $class_prop_group.name }}": {
              "properties": {
                {{- range $index_class_prop, $class_prop := $class_prop_group.properties }}
                {{- if $index_class_prop}},{{end}}
                  "{{ $class_prop.name }}": [
                    {{- range $index_value, $value := $class_prop.values }}
                    {{- if $index_value}},{{end}}
                    "{{ tpl $value $chart }}"
                    {{- end }}
                  ]
                {{- end }}
              }
          }
        {{- end }}
      }
      {{- end }}
    }
    {{- $_ := unset $deviceserver "tmp_start_instance" }}
{{- if $deviceserver.command }}
  command: "{{ $deviceserver.command }}"
{{- else }}
  script: |
{{- $context := dict "deviceserver" $deviceserver "DEBUG" $chart.Values.global.DEBUG }}
{{- include "ska-tango-util.entrypoints-script.tpl" $context | nindent 4 }}
{{- end }}
{{- if ($deviceserver.depends_on) }}
  dependsOn:
{{- range $index, $device := $deviceserver.depends_on }}
  - "{{ coalesce $device.device $device.host | toString }}"
{{- end }}
{{- end }}
{{- if or ($chart.Values.global.environment_variables) ($deviceserver.environment_variables) }}
  env:
{{- range $index, $envvar := $chart.Values.global.environment_variables }}
  - name: {{$envvar.name}}
    value: {{tpl ($envvar.value | toString) $chart }}
{{- end }}
{{- range $index, $envvar := $deviceserver.environment_variables }}
  - name: {{$envvar.name}}
    value: {{tpl ($envvar.value | toString) $chart | quote }}
{{- end }}
{{- end }}
{{- if not $chart.Values.do_not_constraint_resources }}
  resources:
{{ toYaml (coalesce $instance.resources $deviceserver.resources $chart.Values.resources) | indent 4 }}
{{ end }}
{{- with (coalesce $deviceserver.securityContext $chart.Values.securityContext) }}
  securityContext:
    {{- toYaml . | nindent 4 }}
{{ end }}
{{- with (coalesce $deviceserver.nodeSelector $chart.Values.nodeSelector) }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with $chart.Values.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with $chart.Values.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}

{{- end }}
{{- end }} ## if has
{{- end }} # range instances
{{- end }} # ska-tango-util.operator-svc.tpl