{{ define "ska-tango-util.deviceserver.tpl" }}
---
{{ $labels := coalesce .local.Values.global.labels .local.Values.labels "label:none" }}
{{ $annotations := coalesce .local.Values.global.annotations .local.Values.annotations }}
{{ $default_tango_host := printf "%s-%s:10000" "databaseds-tango-base" .local.Release.Name }}
{{ $tango_host := tpl (coalesce .local.Values.global.tango_host .local.Values.tango_host $default_tango_host | toString) .local }}
{{- $databaseds_name := (split ":" $tango_host)._0 }} 
{{ $dsconfig := coalesce .local.Values.global.dsconfig .local.Values.dsconfig}}
{{ $chart := .local }}
{{ $safe_instance := .instance |toString | replace "_" "-" }}
{{ $kubectl_wait_timeout := coalesce $dsconfig.timeout "120s" }}
{{- $legacy_compatibility := or .deviceserver.legacy_compatibility .local.Values.legacy_compatibility }}

{{- if not .local.Values.global.operator }}
---
# Device Server Service
# Parameter: deviceserver struct, global.Values.dsconfig struct, project image struct
# giving a dummy Service entry ensures that the single pod is DNS addressable

apiVersion: v1
kind: Service
metadata:
  name: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
  namespace: {{ .local.Release.Namespace }}
  labels:
{{ toYaml $labels | indent 4 }}
    component: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
    function: {{ .deviceserver.function }}
    domain: {{ .deviceserver.domain }}
    subsystem: {{ .local.Values.subsystem }}
  annotations:
{{ toYaml $annotations | indent 4 }}
spec:
  selector:
    subsystem: {{ .local.Values.subsystem }}
    component: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
  namespace: {{ .local.Release.Namespace }}
  labels:
{{ toYaml $labels | indent 4 }}
    component: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
    function: {{ .deviceserver.function }}
    domain: {{ .deviceserver.domain }}
    subsystem: {{ .local.Values.subsystem }}
  annotations:
{{ toYaml $annotations | indent 4 }}
spec:
  selector:
    matchLabels:
      component: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
      subsystem: {{ .local.Values.subsystem }}
  serviceName: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
  replicas: 1
  template:
    metadata:
      labels:
        component: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
        function: {{ .deviceserver.function }}
        domain: {{ .deviceserver.domain }}
        subsystem: {{ .local.Values.subsystem }}
{{ toYaml $labels | indent 8 }}
      annotations:
{{ toYaml $annotations | indent 8 }}
    spec:
      {{ if $chart.Values.dsconfig.configuration_file }}
      serviceAccountName: {{ $chart.Values.subsystem }}-sa-{{ $chart.Release.Name }}
      {{ end }}
      initContainers:
      {{ if $chart.Values.dsconfig.configuration_file }}
      - name: wait-for-configuration
        image: "bitnami/kubectl:latest"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - kubectl wait job --for=condition=complete {{ $chart.Values.subsystem }}-configuration-{{ $chart.Release.Name }} --timeout={{ $kubectl_wait_timeout }}
      {{ end }}
{{ if (.deviceserver.depends_on) }}
{{ range $index, $device := .deviceserver.depends_on }}
{{ if ($device.host) }}
      - name: check-dependencies-{{ $index }}
        image: "{{ $dsconfig.image.registry }}/{{ $dsconfig.image.image }}:{{ $dsconfig.image.tag }}"
        imagePullPolicy: {{ $dsconfig.image.pullPolicy }}
        command:
          - retry
          {{- if $chart.Values.global.retry }}
          {{- range $retry_option := $chart.Values.global.retry }}
          - {{ $retry_option }}
          {{- end }}
          {{- else }}
          - --max=60
          {{- end }}
          - --
          - /usr/local/bin/wait-for-it.sh
          - {{ $device.host }}
          - --timeout=60
          - --strict
          - --
          - echo {{ $device.host }} ready
{{- if ($chart.Values.global.environment_variables) }}
        env:
{{- range $index, $envvar := $chart.Values.global.environment_variables }}
        - name: {{$envvar.name}}
          value: {{tpl ($envvar.value | toString) $chart }}
{{- end }}
{{- end }}
{{- end }}
{{ if ($device.device) }}
      - name: check-dependencies-{{ $index }}
        image: "{{ $dsconfig.image.registry }}/{{ $dsconfig.image.image }}:{{ $dsconfig.image.tag }}"
        imagePullPolicy: {{ $dsconfig.image.pullPolicy }}
        command:
          - retry
          {{- if $chart.Values.global.retry }}
          {{- range $retry_option := $chart.Values.global.retry }}
          - {{ $retry_option }}
          {{- end }}
          {{- else }}
          - --max=60
          {{- end }}
          - --
          - tango_admin
          - --ping-device
          - {{ $device.device | toString }}
        env:
        - name: TANGO_HOST
          value: {{ $tango_host }}
{{- if ($chart.Values.global.environment_variables) }}
{{- range $index, $envvar := $chart.Values.global.environment_variables }}
        - name: {{$envvar.name}}
          value: {{tpl ($envvar.value | toString) $chart }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
      containers:
      - name: device-server
        image: "{{ tpl (.image.registry | toString) $chart }}/{{ tpl (.image.image | toString) $chart }}:{{ tpl (.image.tag | toString) $chart }}"
        imagePullPolicy: {{ tpl (.image.pullPolicy | toString) $chart }}
        command:
          {{- if not .deviceserver.noretry }}
          - retry
          {{- if $chart.Values.global.retry }}
          {{- range $retry_option := $chart.Values.global.retry }}
          - {{ $retry_option }}
          {{- end }}
          {{- else }}
          - --max=60
          {{- end }}
          - --
          {{- end }}
          - {{ .deviceserver.command | toString }}
          - "{{ .instance | toString }}"
        env:
        - name: TANGO_HOST
          value: {{ $tango_host }}
{{- if .local.Values.global.environment_variables }}
{{- range $index, $envvar := .local.Values.global.environment_variables }}
        - name: {{$envvar.name}}
          value: {{tpl ($envvar.value | toString) $chart }}
{{- end }}
{{- end }}
{{- if .deviceserver.environment_variables }}
{{- range $index, $envvar := .deviceserver.environment_variables }}
        - name: {{$envvar.name}}
          value: {{tpl ($envvar.value | toString) $chart }}
{{- end }}
{{- end }}
{{ if not .local.Values.do_not_constraint_resources }}
        resources:
{{ toYaml (coalesce .deviceserver.resources .local.Values.resources) | indent 10 }}
{{ end }}
{{- with .local.Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .local.Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .local.Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{- else }} #operator

---
apiVersion: tango.tango-controls.org/v1
kind: DeviceServer
metadata:
  name: {{.deviceserver.name | toString }}-{{ $safe_instance }}
  namespace: {{ $chart.Release.Namespace }}
  labels:
{{ toYaml $labels | indent 4 }}
    component: {{tpl (.deviceserver.name | toString) $chart }}-{{ $safe_instance }}
    function: {{ .deviceserver.function }}
    domain: {{ .deviceserver.domain }}
    subsystem: {{ $chart.Values.subsystem }}
{{ if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
{{ end }}
spec:
  legacycompatibility: {{ if ne $legacy_compatibility true}}false{{ else }}true{{ end }}
{{- if or ($chart.Values.global.minikube) ($chart.Values.global.exposeAllDS) (.deviceserver.exposeDS) }}
  enableLoadBalancer: true
{{- end }}
  dsname: "{{ .deviceserver.name }}"
  databaseds: {{ $databaseds_name }}
  image: "{{ tpl (.deviceserver.image.registry | toString) $chart }}/{{ tpl (.deviceserver.image.image | toString) $chart }}:{{ tpl (.deviceserver.image.tag | toString) $chart }}"
  imagePullPolicy: {{ tpl (.deviceserver.image.pullPolicy | toString) $chart }}
  args: "{{ $safe_instance | toString }}"
{{- if $chart.Values.dsconfig.configuration_file }}
  config: |
{{ $chart.Files.Get $chart.Values.dsconfig.configuration_file | indent 4 }}
{{- end }}
  command: "{{ .deviceserver.command }}"
{{- if (.deviceserver.depends_on) }}
  dependsOn:
{{- range $index, $device := .deviceserver.depends_on }}
  - "{{ $device.device | toString }}"
{{- end }}
{{- end }}
{{- if or ($chart.Values.global.environment_variables) (.deviceserver.environment_variables) }}
  env:
{{- range $index, $envvar := $chart.Values.global.environment_variables }}
  - name: {{$envvar.name}}
    value: {{tpl ($envvar.value | toString) $chart }}
{{- end }}
{{- range $index, $envvar := .deviceserver.environment_variables }}
  - name: {{$envvar.name}}
    value: {{tpl ($envvar.value | toString) $chart | quote }}
{{- end }}
{{- end }}
{{- if not $chart.Values.do_not_constraint_resources }}
  resources:
{{ toYaml (coalesce .deviceserver.resources $chart.Values.resources) | indent 4 }}
{{ end }}
{{- with (coalesce .deviceserver.securityContext $chart.Values.securityContext) }}
  securityContext:
    {{- toYaml . | nindent 4 }}
{{ end }}
{{- with (coalesce .deviceserver.nodeSelector $chart.Values.nodeSelector) }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with $chart.Values.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with $chart.Values.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}
{{- end }}


{{- end }} # end if operator
{{- end }} #device server
