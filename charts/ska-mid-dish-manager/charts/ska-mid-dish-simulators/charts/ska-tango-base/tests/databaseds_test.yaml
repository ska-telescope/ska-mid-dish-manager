---
suite: databaseds
templates:
  - databaseds.yaml
tests:
  - it: should have two documents rendered.
    asserts:
      - hasDocuments:
          count: 2

  - it: should have the correct apiVersion, apps/v1, for the StatefulSet resource.
    documentIndex: 1
    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
  
  - it: should have the correct apiVersion, apps/v1, for the Service resource.
    documentIndex: 0
    asserts:
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
  
  - it: should have a service of type NodePort listening on port given by the tango-host, databaseds-test:12345.
    documentIndex: 0
    set:
      global:
        tango_host: databaseds-test:12345
    asserts:
      - equal:
          path: spec.type
          value: NodePort
      - equal:
          path: spec.ports[0].port
          value: 12345

  - it: should have the databaseds listening on port given by the tango-host, databaseds-test:12345.
    documentIndex: 1
    set:
      global:
        tango_host: databaseds-test:12345
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 12345

  - it: should have a Service that routes traffic to the pods with labels.
    documentIndex: 0
    set:
      labels:
        app: ska-tango-images-test
      databaseds:
        component: databaseds-test
        function: tangodb-interface-test
        domain: tango-configuration-test
        intent: testing
    asserts:
      - equal:
          path: spec.selector
          value:
            app: ska-tango-images-test
            component: databaseds-test
            domain: tango-configuration-test
            function: tangodb-interface-test
            intent: testing

  - it: should have a Statfulset with pods having labels.
    documentIndex: 1
    set:
      labels:
        app: ska-tango-images-test
      databaseds:
        component: databaseds-test
        function: tangodb-interface-test
        domain: tango-configuration-test
        intent: testing
    asserts:
      - equal:
          path: spec.selector.matchLabels
          value:
            app: ska-tango-images-test
            component: databaseds-test
            domain: tango-configuration-test
            function: tangodb-interface-test
            intent: testing

  - it: should set the service name to its own cluster hostname that it gets from the tango-host, databaseds-test:12345.
    documentIndex: 1
    set:
      global:
        tango_host: databaseds-test:12345
    asserts:
      - equal:
          path: spec.serviceName
          value: databaseds-test

  - it: should have one replica of the Statefulset resource.
    documentIndex: 1 
    asserts:
      - equal:
          path: spec.replicas
          value: 1

  - it: should use the docker image given by the image my-own-registry/my-own-image.
    documentIndex: 1
    set:
      databaseds:
        image:
          registry: my-own-registry
          image: my-own-image
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: my-own-registry/my-own-image

  - it: should pull the docker image if it is not present.
    documentIndex: 1
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
           
  - it: should set the correct environment variables for the MYSQL database.
    documentIndex: 1
    set:
      tangodb:
        component: tangodb-test
        db:
          db: tango-test
          user: test-user
          password: password-test
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: MYSQL_HOST
            value: ska-tango-base-tangodb-test:3306
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: MYSQL_DATABASE
            value: tango-test
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: MYSQL_USER
            value: test-user
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: MYSQL_PASSWORD
            value: password-test
        
  - it: should have LoadBalancer type service if enabled in global minikube.
    documentIndex: 0
    set:
      global:
        minikube: true
    asserts:
      - isKind:
          of: Service
      - equal:
          path: spec.type
          value: LoadBalancer

  - it: should generate a command for the DatabaseDS parameterized by its tango_host, databaseds-test:40000
    documentIndex: 1
    set:
      global:
        tango_host: databaseds-test:40000
        tries: 2
        sleep: 5
      tangodb:
        component: tangodb-test
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command
          value:
            - retry
            - --tries=2
            - --sleep=5
            - --
            - /usr/local/bin/wait-for-it.sh
            - ska-tango-base-tangodb-test:3306
            - --timeout=60
            - --strict
            - --
            - /usr/local/bin/DataBaseds
            - "2"
            - -ORBendPoint
            - giop:tcp::40000
            - -ORBendPointPublish
            - giop:tcp:$(TANGO_SERVER_PUBLISH_HOSTNAME):40000
